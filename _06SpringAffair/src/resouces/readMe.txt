一：事务的定义

   一条或者多条sql语句的集合，是把一系列的操作捆绑在一起形成一个整体！

二：事务的ACID特性

A：原子性
C：一致性
I：隔离性
D：持久性

三：事务的隔离级别   isolation

  可重复读取
  读已提交
  读未提交
  串行化


四：事务的传播行为   propagation


   1.required  
     spring默认的事务传播行为，
     默认在事务下执行，如果没有事务，则创建事务

     如果A方法中包含事务，B方法没有事务，
      01.如果B方法出现异常，A的方法没捕获，则AB都回滚！
      02.如果B方法出现异常，A的方法捕获，则A提交事务，但是出现异常！
      03.如果A方法出现异常，则AB都回滚！

   2.required_new
      一定会创建新事务，
      如果没有事务，自动创建事务，
      如果有事务，则将当前事务挂起。等待新创建的事务，执行完毕之后，挂起的事务执行！


     如果A方法中包含事务，A的事务挂起
       01.A出现了异常，A回滚，B不受影响
       02.B出现了异常，A不捕获，A和B都回滚
       03.B出现了异常，A捕获，B回滚





   3.supports
      有事务，就执行事务，
      没有事务，就不执行事务 

      如果A方法中包含事务，B方法就在事务下执行，
      如果A方法中不包含事务，B方法就在非事务下执行；
      如果A方法中不包含事务，并且A或者B有任意一个出现了异常，都不会回滚！
      如果A方法中包含事务，B方法出现异常，A的方法没捕获，则AB都回滚！
      如果A方法中包含事务，B方法出现异常，A的方法捕获，则A提交事务，但是出现异常！


   4.not_supported
       不能在事务中执行，有事务会挂起！

       如果A方法中包含事务，会把A的事务挂起，等B方法执行完毕！
         01.B出现了异常，A不捕获，A回滚
         01.B出现了异常，A捕获，A提交，抛出异常信息



   5.mandatory
      如果有事务，就在事务下执行，
      没有事务，就抛出异常！

      如果A方法中包含事务，B方法就在事务下执行，
      如果A方法中不包含事务，直接抛出异常；
      如果A方法中包含事务，B方法出现异常，A的方法没捕获，则AB都回滚！
      如果A方法中包含事务，B方法出现异常，A的方法捕获，则A提交事务，但是出现异常！
      如果A方法中包含事务，A方法出现异常，则AB都回滚！
   
   6.nested
      如果有事务，则在嵌套事务下执行，
      没有事务会创建新事务，并执行

      如果A方法中不包含事务，B方法就在新事务下执行，
         01.B出现了异常，B回滚，A不回滚
         02.A出现了异常，A和B都不回滚
      
      如果A方法中包含事务，B方法也在新事务下执行，
         01.A出现了异常，A和B都回滚
         02.B出现了异常，A的方法没捕获，A和B都回滚
         03.B出现了异常，A的方法捕获，B回滚，则A提交事务，但是出现异常！


   7.never
      不允许在事务下执行，有事务，直接抛出异常！

      A方法中包含事务。直接抛出异常！

